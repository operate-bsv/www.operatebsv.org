(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{327:function(t,a,s){t.exports=s.p+"assets/img/cells.816ea970.png"},328:function(t,a,s){t.exports=s.p+"assets/img/cells@2x.435b93ba.png"},627:function(t,a,s){"use strict";s.r(a);var n=s(41),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"documentation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#documentation"}},[t._v("#")]),t._v(" Documentation")]),t._v(" "),n("h2",{attrs:{id:"background"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[t._v("#")]),t._v(" Background")]),t._v(" "),n("p",[t._v("Operate's design is heavily influenced by (and cross-compatible with) unwriter's "),n("a",{attrs:{href:"https://bitcom.planaria.network",target:"_blank",rel:"noopener"}},[t._v("Bitcom"),n("OutboundLink")],1),t._v(". If you are one of the many developers already following Bitcom's conventions to power your app, you will find Operate fits nicely into how you already reason about your application.")]),t._v(" "),n("p",[t._v("Operate offers some distinct advantages over native Bitcom.")]),t._v(" "),n("h3",{attrs:{id:"protocols-are-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#protocols-are-functions"}},[t._v("#")]),t._v(" Protocols are functions")]),t._v(" "),n("p",[t._v('In Operate, protocols are functions, called "Ops". Anyone can write an Op and publish it to the blockchain and anyone can read the source of an Op to verify what it does. Ops are incredibly powerful and can be used to process data, perform calculations and operations, and return any computable value.')]),t._v(" "),n("p",[t._v("Application developers no longer need to spend time implementing protocol specifications. Operate is a decentralised repository of pre-built, ready to roll, immutable functions.")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/library"}},[t._v("View the Op library")])])]),t._v(" "),n("h3",{attrs:{id:"referencing-ops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#referencing-ops"}},[t._v("#")]),t._v(" Referencing Ops")]),t._v(" "),n("p",[t._v("Ops are referenced by the first 4 bytes of the SHA-256 hash of the function. This allows transaction scripts to keep a compact and succinct form, whilst retaining all the benefits of a decentralised universal naming mechanism.")]),t._v(" "),n("p",[n("em",[t._v("(In the unlikely but possible scenario of two Ops sharing the same first 4 bytes from it's SHA-256 hash, the second function will be referred to by the first 5 bytes).")])]),t._v(" "),n("h3",{attrs:{id:"functional-programming"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functional-programming"}},[t._v("#")]),t._v(" Functional programming")]),t._v(" "),n("p",[t._v("Operate takes advantage of two other unwriter innovations: the "),n("a",{attrs:{href:"https://github.com/unwriter/Bitcom/issues/2",target:"_blank",rel:"noopener"}},[t._v("Bitcom pipeline"),n("OutboundLink")],1),t._v(" and "),n("a",{attrs:{href:"https://medium.com/@_unwriter/hello-bob-94701d278afb",target:"_blank",rel:"noopener"}},[t._v("BOB (Bitcoin OP_RETURN Bytecode)"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v('BOB views Bitcoin input and output scripts as "tapes" made up of "cells", where each cell is a single atomic procedure call. This metaphor fits Operate like a glove. In fact it\'s not even a metaphor, each cell IS a procedure call, it\'s an Op!')]),t._v(" "),n("figure",{staticClass:"mv4 mh0 pa0"},[n("img",{attrs:{src:s(327),srcset:s(328)+" 2x",alt:"Operate tape"}})]),t._v(" "),n("p",[t._v('Each Op takes a number of parameters and returns a result known as the "state". The state is passed as an argument to the next Op, along with any other parameters, and a new state is returned. Each subsequent Op returns a new state until the last Op returns result of the tape.')]),t._v(" "),n("p",[t._v("This approach is analogous to pure functional programming, all encapsulated in Bitcoin transactions. It is an incredibly flexible and powerful system.")]),t._v(" "),n("h2",{attrs:{id:"creating-a-program-tape"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-program-tape"}},[t._v("#")]),t._v(" Creating a program / tape")]),t._v(" "),n("p",[t._v("No new tools are needed to craft a transaction that is a valid Operate program. If you are already familiar with Bitcom's conventions to construct transactions, the same conventions are used by Operate. In fact, many of these legacy transactions are already perfectly valid Operate programs! "),n("span",{staticClass:"pl2 f2 v-top"},[t._v("ðŸ¤¯")])]),t._v(" "),n("p",[t._v("The following example pipes together two Ops:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"/library/op/?ref=2e25b1bd"}},[n("code",[t._v("math/fib")]),t._v(" - "),n("code",[t._v("0x2E25B1BD")])]),t._v(" - returns a list of Fibonacci numbers from the given list of integers.")]),t._v(" "),n("li",[n("a",{attrs:{href:"/library/op/?ref=0ca59130"}},[n("code",[t._v("object/put_new")]),t._v(" - "),n("code",[t._v("0x0CA59130")])]),t._v(" - puts the given state into a new object at the specified path, and adds any other key/value attributes to the object.")])]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("OP_FALSE OP_RETURN\n  0x2E25B1BD\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"40"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"50"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n  0x0CA59130\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fibs"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Satoshi Nakamoto"')]),t._v("\n")])])]),n("h3",{attrs:{id:"using-javascript"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-javascript"}},[t._v("#")]),t._v(" Using JavaScript")]),t._v(" "),n("p",[t._v("We can use familiar tools and libraies to help construct the above scripts. For example, using "),n("a",{attrs:{href:"https://github.com/moneybutton/bsv",target:"_blank",rel:"noopener"}},[t._v("bsv.js"),n("OutboundLink")],1),t._v(":")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("chunks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OpCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OP_FALSE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OpCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OP_RETURN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2E25B1BD'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'30'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'40'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'50'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0CA59130'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fibs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Satoshi Nakamoto'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nscript "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("bsv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" chunks "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"using-elixir"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-elixir"}},[t._v("#")]),t._v(" Using Elixir")]),t._v(" "),n("p",[t._v("Or alternatively using "),n("a",{attrs:{href:"https://hexdocs.pm/bsv",target:"_blank",rel:"noopener"}},[t._v("BSV-ex"),n("OutboundLink")],1),t._v(" (Elixir):")]),t._v(" "),n("div",{staticClass:"language-elixir extra-class"},[n("pre",{pre:!0,attrs:{class:"language-elixir"}},[n("code",[t._v("chunks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":OP_FALSE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":OP_RETURN")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode16!"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2E25B1BD"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"40"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"50"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"|"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  Base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("decode16!"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0CA59130"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fibs"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Satoshi Nakamoto"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\nscript "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("%")]),t._v("BSV"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Script"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("chunks:")]),t._v(" chunks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("In true Blue Peter style, here's one we made earlier:")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://whatsonchain.com/tx/0442b8de08b338c2fd262b2639372eaaf6d16dbf1f8e8eeb821a83ed639e75df",target:"_blank",rel:"noopener"}},[t._v("View on WhatsOnChain.com"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"/playground/?txid=0442b8de08b338c2fd262b2639372eaaf6d16dbf1f8e8eeb821a83ed639e75df"}},[t._v("View in the inspector")])])]),t._v(" "),n("h2",{attrs:{id:"loading-and-running-programs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#loading-and-running-programs"}},[t._v("#")]),t._v(" Loading and running programs")]),t._v(" "),n("p",[t._v("The "),n("a",{attrs:{href:"https://hexdocs.pm/operate",target:"_blank",rel:"noopener"}},[t._v("Operate agent"),n("OutboundLink")],1),t._v(" (Elixir) is used to load and run programs from transactions. To install the agent in your application, add it to your list of dependencies in "),n("code",[t._v("mix.exs")]),t._v(".")]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Warning")]),t._v(" "),n("p",[t._v("The most recent "),n("code",[t._v("luerl")]),t._v(" package published on hex.pm is based on "),n("strong",[t._v("Lua 5.2")]),t._v(" which is not compatible with all Ops. It is recommended to override the "),n("code",[t._v("luerl")]),t._v(" dependency with the latest development version to benefit from "),n("strong",[t._v("Lua 5.3")]),t._v(".")])]),t._v(" "),n("div",{staticClass:"language-elixir extra-class"},[n("pre",{pre:!0,attrs:{class:"language-elixir"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" deps "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":operate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~> 0.1.0-beta"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":luerl")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("github:")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rvirding/luerl"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("branch:")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"develop"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("override:")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),n("p",[t._v("The API for loading and running tapes is very simple:")]),t._v(" "),n("div",{staticClass:"language-elixir extra-class"},[n("pre",{pre:!0,attrs:{class:"language-elixir"}},[n("code",[t._v("txid "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0442b8de08b338c2fd262b2639372eaaf6d16dbf1f8e8eeb821a83ed639e75df"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":ok")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Operate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":ok")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Operate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("result\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# returns")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fibs"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("55")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6765")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("832040")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("102334155")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12586269025")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Satoshi Nakamoto"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"compatibility-with-bitcom-protocols"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compatibility-with-bitcom-protocols"}},[t._v("#")]),t._v(" Compatibility with Bitcom protocols")]),t._v(" "),n("p",[t._v("Many existing transactions using Bitcom protocols are already fully compatible with Operate. By configuring the agent's "),n("code",[t._v("aliases")]),t._v(" option, we can alias legacy protocols to Ops designed to implement that protocol.")]),t._v(" "),n("p",[t._v("Most applications make use of a small number of protocols, so by adding just a handful of aliases, your application is already compatible with Operate.")]),t._v(" "),n("div",{staticClass:"language-elixir extra-class"},[n("pre",{pre:!0,attrs:{class:"language-elixir"}},[n("code",[t._v("aliases "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"19HxigV4QyBv3tHpQVcUEQyq1pzZVdoAut"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"6232de04"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# b://")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1PuQa7K62MiKCtssSLKy1kh56WWU7MtUR5"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1fec30d4"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# map")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"15PciHG22SNLQJXMoSUaWVi7WSqc7hCfva"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"577953fb"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# aip")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1LtyME6b5AnMopQrBPLk4FGN8UBuhxKqrn"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5ad609a8"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weatherSV")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":ok")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Operate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load_tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("txid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("aliases:")]),t._v(" aliases"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token atom symbol"}},[t._v(":ok")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Operate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tape"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("For more information on how to use and configure Operate, read the agent's "),n("a",{attrs:{href:"https://hexdocs.pm/operate",target:"_blank",rel:"noopener"}},[t._v("full documentation"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"writing-ops"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#writing-ops"}},[t._v("#")]),t._v(" Writing Ops")]),t._v(" "),n("p",[t._v("As the public "),n("a",{attrs:{href:"/library"}},[t._v("repository of Ops")]),t._v(" grows, developers may find they can use Operate without creating their own Ops. But occaisionally it may be necessary to create and publish your own bespoke Op.")]),t._v(" "),n("h3",{attrs:{id:"anatomy-of-an-op"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anatomy-of-an-op"}},[t._v("#")]),t._v(" Anatomy of an Op")]),t._v(" "),n("p",[t._v("An Op is a function written in Lua.")]),t._v(" "),n("div",{staticClass:"language-lua extra-class"},[n("pre",{pre:!0,attrs:{class:"language-lua"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--[[\nDocument the function\n]]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arg2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" state "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- Code here")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),n("p",[t._v("The first argument of the function is always the "),n("code",[t._v("state")]),t._v(". Where a function is called in the first cell of a tape, the state will default to "),n("code",[t._v("nil")]),t._v(" so your function should handle that.")]),t._v(" "),n("p",[t._v("The function can receive any number of arguments, as defined by your protocol's parameters. Within the body of the function, those arguments can be used to mutate the state in any way before returning a new, modified state.")]),t._v(" "),n("p",[t._v("The comment block immediately prior to the function should be used to add documentation and examples. Any Markdown formatted text can be placed here.")]),t._v(" "),n("h3",{attrs:{id:"what-can-an-op-do"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#what-can-an-op-do"}},[t._v("#")]),t._v(" What can an Op do?")]),t._v(" "),n("p",[t._v("Most Ops will probably be simple, single purpose functions, designed to do one thing and do it well. However, the Lua VM and agent can be combined to very powerful effect.")]),t._v(" "),n("p",[t._v("A function can return any value, including other functions. Returned functions can then be called in your own application's code, outside of Lua. This is a great way of passing in private data such as keys, without permanently exposing them to the Lua VM.")]),t._v(" "),n("p",[t._v("Developers can also chose to extend the Lua VM with their own modules, even writing Elixir code in their own application that is called from within the Lua VM.")]),t._v(" "),n("p",[t._v("This kind of flexibility is powerful and opens up use cases limited only by your imagination.")]),t._v(" "),n("h3",{attrs:{id:"publishing-ops-with-the-cli"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#publishing-ops-with-the-cli"}},[t._v("#")]),t._v(" Publishing Ops with the CLI")]),t._v(" "),n("p",[t._v("The "),n("a",{attrs:{href:"https://github.com/operate-bsv/op_cli",target:"_blank",rel:"noopener"}},[t._v("Operate CLI"),n("OutboundLink")],1),t._v(" provides a set of tools to help create, manage and publish Ops. It can be installed using "),n("code",[t._v("npm")]),t._v(" or "),n("code",[t._v("yarn")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install with npm")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g @operate/cli\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install with yarn")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" @operate/cli\n")])])]),n("p",[t._v("You can list all available commands and/or get usage help for a specific command.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List available commands")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" operate --help \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get help on any command")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" operate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --help\n")])])]),n("p",[t._v("Use the "),n("code",[t._v("init")]),t._v(" command to initialise a working directory for your Op(s). This will generate a "),n("code",[t._v(".bit")]),t._v(" environment file in your working directory containing your publishing address and private key.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" operate init path/to/directory\n")])])]),n("p",[t._v("You will need to fund your publishing wallet before publishing any Op. From within your working directory, use the "),n("code",[t._v("wallet")]),t._v(" command to see your wallet address and balance.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" operate wallet\n")])])]),n("p",[t._v("Use the "),n("code",[t._v("new")]),t._v(" command to generate a new blank function in the "),n("code",[t._v("src")]),t._v(" folder of your working directory.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" operate new my/function -a arg1 -a arg2\n")])])]),n("p",[t._v("When ready (and your publishing wallet is funded), use the "),n("code",[t._v("publish")]),t._v(" command to publish the Op to the blockchain.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" operate publish my/function\n")])])]),n("p",[t._v("It is recommended to test functions thoroughly before publishing on the blockchain. View the "),n("a",{attrs:{href:"https://github.com/operate-bsv/op_library",target:"_blank",rel:"noopener"}},[t._v("operate/op_library"),n("OutboundLink")],1),t._v(" repository for examples of setting up an Op library with an Ex-Unit test suite.")])])}),[],!1,null,null,null);a.default=e.exports}}]);